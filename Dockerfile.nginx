FROM node:18-alpine AS builder

# Install build dependencies
RUN apk add --no-cache git python3 make g++ bash

WORKDIR /app

# Copy package files
COPY package*.json package-lock.json* ./

# Install dependencies
RUN npm install --force

# Copy all source files
COPY . .
# Clear any existing build artifacts
RUN rm -rf dist web-build .expo

# Try different build methods
RUN npx expo export --platform web || \
    npx expo build:web || \
    npx expo webpack || \
    (echo "Failed to build web version" && exit 1)

# Find the output directory
RUN find . -name "*.html" -type f | head -1 | xargs dirname > /tmp/build_dir.txt



# Stage 2: Serve with Nginx
FROM nginx:alpine

# Copy the build output (detect the correct directory)
COPY --from=builder /app/dist /usr/share/nginx/html 2>/dev/null || \
COPY --from=builder /app/web-build /usr/share/nginx/html 2>/dev/null || \
COPY --from=builder /app/build /usr/share/nginx/html 2>/dev/null

COPY nginx.conf /etc/nginx/nginx.conf

EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]